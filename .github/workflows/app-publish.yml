name: Android CI

on:
  push:
    branches: [ "add_flut" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10'  # Replace with your desired Flutter version
      - name: Init flutter project set up as a module
        run: |
          flutter config --no-analytics
          cd greenapp
          flutter pub get
          flutter build bundle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Load local  properties file
        run: echo "${{ secrets.LOCAL_PROPERTIES }}" > local.properties
      - name: Load encoded certificate to decode and sign up
        run: echo "${{ secrets.CERT_BASE_64 }}" | base64 --decode > $GITHUB_WORKSPACE/app/cert.final
      - name: Load encoded json for push app bundle
        run: echo "${{ secrets.PRIVATE_WALLET_JSON }}" | base64 --decode > $GITHUB_WORKSPACE/app/private_wallet.json
      - name: Build with Gradle
        run: ./gradlew publishBundle
      - name: Get Version Name
        id: get-version-name
        run: |
          VERSION_NAME=$(./gradlew properties -q | grep "versionName" | awk -F= '{print $2}')
          echo "Version Name: $VERSION_NAME"
          echo "::set-output name=version_name::$VERSION_NAME"
      - name: Upload APK to Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release ${{ steps.get-version-name.outputs.version_name }}.apk
          asset_content_type: application/vnd.android.package-archive
