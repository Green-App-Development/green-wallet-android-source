import 'package:chia_crypto_utils/src/clvm/program.dart';
import 'package:hex/hex.dart';
import 'package:test/expect.dart';
import 'package:test/scaffolding.dart';

class RunIn {
  final String puzzle;
  final String solution;
  final int? cost;
  final bool? strict;
  RunIn(this.puzzle, {String? solution, this.cost, this.strict}) : solution = solution ?? '()';
}

class RunOut {
  final String output;
  final int? cost;
  final bool showKeywords;
  final bool dump;
  RunOut(this.output, {this.cost, bool? showKeywords, bool? dump, bool? strict})
      : dump = dump ?? false,
        showKeywords = showKeywords ?? true;
}

class SerializeIn {
  final String puzzle;
  SerializeIn(this.puzzle);
}

class SerializeOut {
  final String output;
  SerializeOut(this.output);
}

class DeserializeIn {
  final String puzzle;
  DeserializeIn(this.puzzle);
}

class DeserializeOut {
  final String output;
  final bool showKeywords;
  DeserializeOut(this.output, {bool? showKeywords}) : showKeywords = showKeywords ?? true;
}

void main() {
  Map<RunIn, RunOut?> runTests = {
    // add-1
    RunIn('(+ (q . 7) (q . 1))'): RunOut('8', cost: 805),
    // add-2
    RunIn('(+ (q . 1))'): RunOut('1', cost: 462),
    // add-3
    RunIn('(+ ())'): RunOut('()', cost: 473),
    // add-4
    RunIn('(+)'): RunOut('()', cost: 109),
    // add-5
    RunIn('(+ (q . 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000007) (q . 0x000000000000000000000000000000000000000000000000000000000000000000000001))'):
        RunOut('8', cost: 1030),
    // all-1
    RunIn('(all (q . 1))'): RunOut('1', cost: 530),
    // all-2
    RunIn('(all (q . 1) (q . (foo)))'): RunOut('1', cost: 850),
    // all-3
    RunIn('(all (q . 1) (q . 1) (q . 0))'): RunOut('()', cost: 1170),
    // any-1
    RunIn('(any (q . 1))'): RunOut('1', cost: 530),
    // any-2
    RunIn('(any (q . 0) (q . (foo)))'): RunOut('1', cost: 850),
    // any-3
    RunIn('(any (q . 0) (q . 0))'): RunOut('()', cost: 850),
    // apply-00
    RunIn('(a (q . 2) (q . (3 4 5)))'): RunOut('3', cost: 188),
    // apply-01
    RunIn('(a (q . 5) (q . (3 4 5)))'): RunOut('4', cost: 192),
    // apply-02
    RunIn('(a (q . 11) 1)', solution: '(5 6 7 8 9)'): RunOut('7', cost: 220),
    // apply-03
    RunIn('(a)'): null,
    // apply-04
    RunIn('(a (q . +))'): null,
    // apply-05
    RunIn('(a (q . +) (q . (1 2 3)) (q . foo))'): null,
    // apply-06
    RunIn('(a (q . (+ 2 5)) (q . (20 30)))'): RunOut('50', cost: 996),
    // apply-07
    RunIn('(a (q . q) (q . (2 3 4)))', strict: true):
        RunOut('(2 3 4)', cost: 184, showKeywords: false),
    // args-00
    RunIn('0', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('()', cost: 53, showKeywords: false),
    // args-01
    RunIn('1', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('(((8 . 12) 10 . 14) (9 . 13) 11 . 15)', cost: 53, showKeywords: false),
    // args-02
    RunIn('2', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('((8 . 12) 10 . 14)', cost: 57, showKeywords: false),
    // args-03
    RunIn('3', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('((9 . 13) 11 . 15)', cost: 57, showKeywords: false),
    // args-04
    RunIn('4', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('(8 . 12)', cost: 61, showKeywords: false),
    // args-05
    RunIn('5', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('(9 . 13)', cost: 61, showKeywords: false),
    // args-06
    RunIn('6', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('(10 . 14)', cost: 61, showKeywords: false),
    // args-07
    RunIn('7', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('(11 . 15)', cost: 61, showKeywords: false),
    // args-08
    RunIn('8', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('8', cost: 65, showKeywords: false),
    // args-09
    RunIn('9', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('9', cost: 65, showKeywords: false),
    // args-10
    RunIn('10', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('10', cost: 65, showKeywords: false),
    // args-11
    RunIn('11', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('11', cost: 65, showKeywords: false),
    // args-12
    RunIn('12', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('12', cost: 65, showKeywords: false),
    // args-13
    RunIn('13', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('13', cost: 65, showKeywords: false),
    // args-14
    RunIn('14', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('14', cost: 65, showKeywords: false),
    // args-15
    RunIn('15', solution: '(((8 . 12) . (10 . 14)) . ((9 . 13) . (11 . 15)))'):
        RunOut('15', cost: 65, showKeywords: false),
    // ash-1
    RunIn('(ash (q . 7) (q . 1))'): RunOut('14', cost: 662),
    // ash-2
    RunIn('(ash (q . 7) (q . 100))'): RunOut('0x70000000000000000000000000', cost: 818),
    // ash-3
    RunIn('(ash (q . -7) (q . 100))'): RunOut('0x90000000000000000000000000', cost: 818),
    // ash-4
    RunIn('(ash (q . 0x90000000000000000000000000) (q . -100))'): RunOut('-7', cost: 698),
    // ash-5
    RunIn('(ash (q . 1))'): null,
    // ash-6
    RunIn('(ash (q . 1) (q . 1) (q . 1))'): null,
    // ash-7
    RunIn('(ash (q . (foo)) (q . 1))'): null,
    // ash-8
    RunIn('(ash (q . 500) (q . 65535))'): RunOut(
        '0x00fa
        cost: 107171),
    // ash-9
    RunIn('(ash (q . 500) (q . -65535))'): RunOut('()', cost: 652),
    // ash-a
    RunIn('(ash (q . 500) (q . 65536))'): null,
    // ash-b
    RunIn('(ash (q . 500) (q . -65536))'): null,
    // ash-c
    RunIn('(ash (q . 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007) (q . 0x0000000000000000000000000000000000000000000000000000000000000001))'):
        null,
    // concat-1
    RunIn('(concat)'): RunOut('()', cost: 152),
    // concat-2
    RunIn('(concat (q . foo))'): RunOut('"foo"', cost: 346),
    // concat-3
    RunIn('(concat (q . foo) (q . bar))'): RunOut('"foobar"', cost: 540),
    // concat-4
    RunIn('(concat (q . foo) (q . (bar)))'): null,
    // cons-1
    RunIn('(c)'): null,
    // cons-2
    RunIn('(c (q . 100) (q . ()))'): RunOut('(100)', cost: 100),
    // cons-3
    RunIn('(c (q . 100) (q . (200 300 400)))'): RunOut('(100 200 300 400)', cost: 100),
    // cons-4
    RunIn('(c (q . 100) (q . ((500 (200 300 400)))))'):
        RunOut('(100 (500 (200 300 400)))', cost: 100),
    // cons-5
    RunIn('(c (q . 100))'): null,
    // cons-as-op-1
    RunIn('((c (q . (+ (q . 50) 1)) (q . 500)))'): null,
    // div-1
    RunIn('(/ 2 5)', solution: '(80001 73)'): RunOut('1095', cost: 1134),
    // div-2
    RunIn('(/ 2 5)', solution: '(-80001 73)'): RunOut('-1096', cost: 1134),
    // div-3
    RunIn('(/ 2 5)', solution: '(80001 -73)'): RunOut('-1096', cost: 1134),
    // div-4
    RunIn('(/ 2 5)', solution: '(80001 0)'): null,
    // div-5
    RunIn('(/ (q . 0x00000000000000000000000000000000000000000000000000000000a) (q . 0x000000000000000000000000000000000000000000000000000000000000000000000005))'):
        RunOut('2', cost: 1308),
    // divmod-1
    RunIn('(divmod 2 5)', solution: '(80001 73)'): RunOut('(1095 . 66)', cost: 1280),
    // divmod-10
    RunIn('(divmod 2 5)', solution: '(80000 -10)'): RunOut('(-8000)', cost: 1270),
    // divmod-11
    RunIn('(divmod (q . 0x0000000000000000000000000000000000000000000000000000000000000013881) (q . 0x0000000000000000000000000000000000000000000000000000049))'):
        RunOut('(1095 . 66)', cost: 1568),
    // divmod-12
    RunIn('(divmod (q . -10) (q . -7))'): RunOut('(1 . -3)', cost: 1198, showKeywords: false),
    // divmod-13
    RunIn('(divmod (q . -10) (q . 7))'): RunOut('(-2 . 4)', cost: 1198, showKeywords: false),
    // divmod-14
    RunIn('(divmod (q . 10) (q . -7))'): RunOut('(-2 . -4)', cost: 1198, showKeywords: false),
    // divmod-15
    RunIn('(divmod (q . 10) (q . 7))'): RunOut('(1 . 3)', cost: 1198, showKeywords: false),
    // divmod-16
    RunIn('(divmod (q . -10) (q . -70))'): RunOut('(() . -10)', cost: 1188, showKeywords: false),
    // divmod-17
    RunIn('(divmod (q . -10) (q . 70))'): RunOut('(-1 . 60)', cost: 1198, showKeywords: false),
    // divmod-18
    RunIn('(divmod (q . 10) (q . -70))'): RunOut('(-1 . -60)', cost: 1198, showKeywords: false),
    // divmod-19
    RunIn('(divmod (q . 10) (q . 70))'): RunOut('(() . 10)', cost: 1188, showKeywords: false),
    // divmod-2
    RunIn('(divmod 2 5)', solution: '(-80001 73)'): RunOut('(-1096 . 7)', cost: 1280),
    // divmod-20
    RunIn('(divmod (q . -100) (q . -7))'): RunOut('(14 . -2)', cost: 1198, showKeywords: false),
    // divmod-21
    RunIn('(divmod (q . -100) (q . 7))'): RunOut('(-15 . 5)', cost: 1198, showKeywords: false),
    // divmod-22
    RunIn('(divmod (q . 100) (q . -7))'): RunOut('(-15 . -5)', cost: 1198, showKeywords: false),
    // divmod-23
    RunIn('(divmod (q . 100) (q . 7))'): RunOut('(14 . 2)', cost: 1198, showKeywords: false),
    // divmod-24
    RunIn('(divmod (q . -100) (q . -70))'): RunOut('(1 . -30)', cost: 1198, showKeywords: false),
    // divmod-25
    RunIn('(divmod (q . -100) (q . 70))'): RunOut('(-2 . 40)', cost: 1198, showKeywords: false),
    // divmod-26
    RunIn('(divmod (q . 100) (q . -70))'): RunOut('(-2 . -40)', cost: 1198, showKeywords: false),
    // divmod-27
    RunIn('(divmod (q . 100) (q . 70))'): RunOut('(1 . 30)', cost: 1198, showKeywords: false),
    // divmod-3
    RunIn('(divmod 2 5)', solution: '(80001 -73)'): RunOut('(-1096 . -7)', cost: 1280),
    // divmod-4
    RunIn('(divmod 2 5)', solution: '(-80001 -73)'): RunOut('(1095 . -66)', cost: 1280),
    // divmod-5
    RunIn('(divmod 2 5)', solution: '((200 80001) 73)'): null,
    // divmod-6
    RunIn('(divmod 2 5)', solution: '(80001 (200 73))'): null,
    // divmod-7
    RunIn('(divmod 2 5)', solution: '(80001 0)'): null,
    // divmod-8
    RunIn('(divmod 2 5)', solution: '(80000 10)'): RunOut('(8000)', cost: 1270),
    // divmod-9
    RunIn('(divmod 2 5)', solution: '(-80000 10)'): RunOut('(-8000)', cost: 1270),
    // double-cons-1
    RunIn('((+) 1 2 3 4)'): RunOut('10', cost: 1500),
    // double-cons-2
    RunIn('((*) 1 2 3 4)'): RunOut('24', cost: 2892),
    // double-cons-3
    RunIn('((+ . foo) 1 2 3)'): null,
    // double-cons-4
    RunIn('(((+)) 1 2 3)'): null,
    // env-1
    RunIn('1', solution: '(100)'): RunOut('(100)', cost: 53),
    // env-2
    RunIn('1', solution: '(990)'): RunOut('(990)', cost: 53),
    // env-3
    RunIn('1'): RunOut('()', cost: 53),
    // env-4
    RunIn('1', solution: '(100 200)'): RunOut('(100 200)', cost: 53),
    // env-5
    RunIn('1', solution: '((100 101 102) 105)'): RunOut('((100 101 102) 105)', cost: 53),
    // equal-1
    RunIn('(= (q . 10))'): null,
    // equal-10
    RunIn('(= (q . 0xq . 0x
        RunOut('1', cost: 857),
    // equal-11
    RunIn('(= (q . 0) (q . (0)))'): null,
    // equal-2
    RunIn('(= (q . 10) (q . 10))'): RunOut('1', cost: 169),
    // equal-3
    RunIn('(= (q . 10) 1)', solution: '10'): RunOut('1', cost: 193),
    // equal-4
    RunIn('(= (q . 0) (q . 0))'): RunOut('1', cost: 167),
    // equal-5
    RunIn('(= (q . (0)) (q . 0))'): null,
    // equal-6
    RunIn("(= (q . 2) (q . 3))"): RunOut('()', cost: 169),
    // equal-7
    RunIn("(= 3 3)"): null,
    // equal-8
    RunIn("(= (f 1) (+ (f (r 1)) (f (r (r 1)))))", solution: "(7 3 4)"): RunOut('1', cost: 1203),
    // equal-9
    RunIn("(= (f 1) (+ (f (r 1)) (f (r (r 1)))))", solution: "(7 3 3)"): RunOut('()', cost: 1203),
    // eval-1
    RunIn('(a (q . 1) (q . (100 200)))'): RunOut('(100 200)', cost: 184),
    // eval-2
    RunIn('(a (q . 1))'): null,
    // eval-3
    RunIn('(a (q . (c (f 1) (q . (105 200)))) (q . (100 200)))'):
        RunOut('(100 105 200)', cost: 286),
    // eval-4
    RunIn('(a (q . 0) (q . 1) (q . 2))'): null,
    // first-1
    RunIn('(f (q . (100)))'): RunOut('100', cost: 60),
    // first-2
    RunIn('(f (q . (1 2 3)))'): RunOut('1', cost: 60),
    // first-3
    RunIn('(f (q . ()))'): null,
    // first-4
    RunIn('(f (f (q . ((100 200 300) 400 500))))'): RunOut('100', cost: 91),
    // gr-s-1
    RunIn('(>s (q . 0x00) (q . ""))'): RunOut('1', cost: 168),
    // gr-s-10
    RunIn('(>s (q . 0x001004) (q . (100 200)))'): null,
    // gr-s-2
    RunIn('(>s (q . 0x01) (q . 0x00))'): RunOut('1', cost: 169),
    // gr-s-3
    RunIn('(>s (q . 0x00) (q . 0x01))'): RunOut('()', cost: 169),
    // gr-s-4
    RunIn('(>s (q . 0x1000) (q . 0x1001))'): RunOut('()', cost: 171),
    // gr-s-5
    RunIn('(>s (q . 0x1000) (q . 0x01))'): RunOut('1', cost: 170),
    // gr-s-6
    RunIn('(>s (q . 0x1000) (q . 0x1000))'): RunOut('()', cost: 171),
    // gr-s-7
    RunIn('(>s (q . 0x001004) (q . 0x1005))'): RunOut('()', cost: 172),
    // gr-s-8
    RunIn('(>s (q . 0x1005) (q . 0x001004))'): RunOut('1', cost: 172),
    // gr-s-9
    RunIn('(>s (q . (100 200)) (q . 0x001004))'): null,
    // greater-1
    RunIn('(> (q . 10))'): null,
    // greater-10
    RunIn("(> (q . 0x000000000000000000000000000000000000000000000000000000000000000000493e0) (q . 0x00000000000000000000000000000000000000000000000000000000000005a))"):
        RunOut('1', cost: 684),
    // greater-2
    RunIn('(> (q . 11) 1)', solution: '10'): RunOut('1', cost: 576),
    // greater-3
    RunIn('(> (q . 9) 1)', solution: '10'): RunOut('()', cost: 576),
    // greater-4
    RunIn('(> (q . 0) (q . 0))'): RunOut('()', cost: 548),
    // greater-5
    RunIn('(> (q . (0)) (q . 0))'): null,
    // greater-6
    RunIn("(> 3 3)"): null,
    // greater-7
    RunIn("(> (q . 3) (q . 300))"): RunOut('()', cost: 554),
    // greater-8
    RunIn("(> (q . 0x5a) (q . 0x493e0))"): RunOut('()', cost: 556),
    // greater-9
    RunIn("(> (q . 0x493e0) (q . 0x5a))"): RunOut('1', cost: 556),
    // hex-1
    RunIn('(q . 0x00)'): RunOut('0x00', cost: 29),
    // hex-2
    RunIn('(q . 0x007eff)'): RunOut('0x007eff', cost: 29),
    // if_1
    RunIn('(i (q . 100) (q . 200) (q . 300))'): RunOut('200', cost: 103),
    // if_2
    RunIn('(i (q . ()) (q . 200) (q . 300))'): RunOut('300', cost: 103),
    // if_3
    RunIn('(i (q . 1) (q . 200) (q . 300))'): RunOut('200', cost: 103),
    // if_4
    RunIn('(i (f (r (r 1))) (f 1) (f (r 1)))', solution: '(200 300 400)'): RunOut('200', cost: 361),
    // if_5
    RunIn('(i (f (r (r 1))) (f 1) (f (r 1)))', solution: '(200 300 1)'): RunOut('200', cost: 361),
    // illegal-dot-expression
    RunIn('(q . . 0 1)'): null,
    // int-0
    RunIn('(q . 127)'): RunOut('7f', dump: true),
    // int-1
    RunIn('(q . 128)'): RunOut('820080', dump: true),
    // int-2
    RunIn('(q . -127)'): RunOut('8181', dump: true),
    // int-3
    RunIn('(q . -128)'): RunOut('8180', dump: true),
    // int-4
    RunIn('(q . 32767)'): RunOut('827fff', dump: true),
    // int-5
    RunIn('(q . 32768)'): RunOut('83008000', dump: true),
    // int-6
    RunIn('(q . -32767)'): RunOut('828001', dump: true),
    // int-7
    RunIn('(q . -32768)'): RunOut('828000', dump: true),
    // list-1
    RunIn('(l (q . 100))'): RunOut('()', cost: 49),
    // list-2
    RunIn('(l (q . (100)))'): RunOut('1', cost: 49),
    // list-3
    RunIn('(l)'): null,
    // list-4
    RunIn('(l (q . 100) (q . 200))'): null,
    // list-5
    RunIn('(l 2)', solution: '(50)'): RunOut('()', cost: 77),
    // logand-1
    RunIn('(logand (q . 0xfffe) (q . 93))'): RunOut('92', cost: 697),
    // logand-2
    RunIn('(logand (q . 13) (q . 12))'): RunOut('12', cost: 694),
    // logand-3
    RunIn('(logand (q . 13) (q . 12) (q . 4))'): RunOut('4', cost: 981),
    // logand-4
    RunIn('(logand)'): RunOut('-1', cost: 120),
    // logand-5
    RunIn('(logand (q . 0x000000000000000000000000000000000000000000000000000000000000fffe) (q . 0x00000000000000000000000000000000000000000000000000000000000005D))'):
        RunOut('92', cost: 880),
    // logand-6
    RunIn('(logand (q . -128) (q . 0x7ffff))'): RunOut('0x07ff80', cost: 720),
    // logior-1
    RunIn('(logior (q . 12) (q . 5))'): RunOut('13', cost: 694),
    // logior-2
    RunIn('(logior (q . 12) (q . 5) (q . 7))'): RunOut('15', cost: 981),
    // logior-3
    RunIn('(logior (q . 0x0000000000000000000000000000000000000000000000000000000000000000000000000000c) (q . 0x00005) (q . 0x00000000000000000000000000000000000000000000000000000000000000007))'):
        RunOut('15', cost: 1197),
    // logior-4
    RunIn('(logior (q . -128) (q . 0x7ffff))'): RunOut('-1', cost: 700),
    // lognot-1
    RunIn('(lognot (q . 12))'): RunOut('-13', cost: 374),
    // lognot-2
    RunIn('(lognot (q . -1))'): RunOut('()', cost: 364),
    // lognot-3
    RunIn('(lognot (q . 0))'): RunOut('-1', cost: 371),
    // lognot-4
    RunIn('(lognot (q . 734671943749191))'): RunOut('0xfd63d1dbc431b8', cost: 452),
    // lognot-5
    RunIn('(lognot)'): null,
    // lognot-6
    RunIn('(lognot (q . (foo)))'): null,
    // lognot-7
    RunIn('(lognot (q . 1) (q . 2))'): null,
    // lognot-8
    RunIn('(lognot (q . 
        RunOut('-2', cost: 14903),
    // logxor-1
    RunIn('(logxor (q . 12) (q . 5))'): RunOut('9', cost: 694),
    // logxor-2
    RunIn('(logxor (q . 12) (q . 5) (q . 7))'): RunOut('14', cost: 981),
    // logxor-3
    RunIn('(logxor (q . 0x0000000000000000000000000000000000000000000000000000000000000000000000000c) (q . 0x00005) (q . 0x0000000000000000000000000000000000000000000000000000000000000000007))'):
        RunOut('14', cost: 1194),
    // logxor-4
    RunIn('(logxor (q . -128) (q . 0x7ffff))'): RunOut('0xf8007f', cost: 720),
    // lsh-1
    RunIn('(lsh (q . 7) (q . 1))'): RunOut('14', cost: 343),
    // lsh-2
    RunIn('(lsh (q . 7) (q . 100))'): RunOut('0x70000000000000000000000000', cost: 499),
    // lsh-3
    RunIn('(lsh (q . -7) (q . 100))'): RunOut('0x0f90000000000000000000000000', cost: 512),
    // lsh-4
    RunIn('(lsh (q . 0x90000000000000000000000000) (q . -100))'): RunOut('9', cost: 379),
    // lsh-5
    RunIn('(lsh (q . 1))'): null,
    // lsh-6
    RunIn('(lsh (q . 1) (q . 1) (q . 1))'): null,
    // lsh-7
    RunIn('(lsh (q . (foo)) (q . 1))'): null,
    // lsh-8
    RunIn('(lsh (q . 500) (q . 65535))'): RunOut(
        '0x00fa
        cost: 106852),
    // lsh-9
    RunIn('(lsh (q . 500) (q . -65535))'): RunOut('()', cost: 333),
    // lsh-a
    RunIn('(lsh (q . 500) (q . 65536))'): null,
    // lsh-b
    RunIn('(lsh (q . 500) (q . -65536))'): null,
    // lsh-c
    RunIn('(lsh (q . 0x00000000000000000000000000000000000000000000000000000000000000000007) (q . 0x000000000000000000000000000000000000000000000000000000000000000000001))'):
        null,
    // lsh-d
    RunIn('(lsh (q . 0xffffff) (q . 0))'): RunOut('0x00ffffff', cost: 385),
    // lsh-e
    RunIn('(lsh (q . 0xffffff) (q . 1))'): RunOut('0x01fffffe', cost: 388),
    // lsh-f
    RunIn('(lsh (q . 0x00ffffff) (q . -1))'): RunOut('0x7fffff', cost: 378),
    // lsh-g
    RunIn('(lsh (q . 0xffffff) (q . 8))'): RunOut('0x00ffffff00', cost: 398),
    // max-cost-1
    RunIn('73', solution: '(c (q . 100) (q . 200))'): null,
    // max-cost-2
    RunIn('72', solution: '(c (q . 100) (q . 200))'): null,
    // mul-1
    RunIn('(* (q . 7) (q . 2))'): RunOut('14', cost: 1049),
    // mul-2
    RunIn('(* (q . 1))'): RunOut('1', cost: 132),
    // mul-3
    RunIn('(* ())'): RunOut('()', cost: 146),
    // mul-4
    RunIn('(*)'): RunOut('1', cost: 112),
    // mul-5
    RunIn('(* (q . 0x00000000000000000000000000000000000000000000000000000000000000000000000007) (q . 0x000000000000000000000000000000000000000000000000000000000000000000000000000000002))'):
        RunOut('14', cost: 1516),
    // mul-6
    RunIn('(* (q . 7) (q . -1))'): RunOut('-7', cost: 1049),
    // mul-7
    RunIn('10000',
            solution:
                '(* (q . 10000000000000000000000000000000000) (q . 10000000000000000000000000000000) (q . 100000000000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000) (q . 1000000000000000000000000000000))'):
        null,
    // not-1
    RunIn('(not (q . 0))'): RunOut('1', cost: 230),
    // not-2
    RunIn('(not (q . 1))'): RunOut('()', cost: 230),
    // not-3
    RunIn('(not (q . (foo bar)))'): RunOut('()', cost: 230),
    // path-1
    RunIn('1', solution: '1'): RunOut('1', cost: 53),
    // path-10
    RunIn('0xD7',
            solution:
                '(0x1337 . (0x1337 . (0x1337 . ((0x1337 . ((0x1337 . 42) . 0x1337)) . 0x1337))))'):
        RunOut('42', cost: 81, showKeywords: false),
    // path-11
    RunIn('0x000000000000000000000000'): RunOut('()', cost: 101, showKeywords: false),
    // path-2
    RunIn('44', solution: '(((0x1337 . (0x1337 . (42 . 0x1337))) . 0x1337) . 0x1337)'):
        RunOut('42', cost: 73, showKeywords: false),
    // path-3
    RunIn('7708975405620101644641102810267383005',
            solution:
                '(0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (((0x1337 . ((0x1337 . (0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . ((0x1337 . (((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (((0x1337 . (((0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . ((0x1337 . (((((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (0x1337 . (((0x1337 . (0x1337 . ((0x1337 . (0x1337 . ((((0x1337 . (0x1337 . (0x1337 . (0x1337 . (((((0x1337 . (0x1337 . (0x1337 . (0x1337 . (0x1337 . (((((0x1337 . (((((0x1337 . ((0x1337 . (0x1337 . ((((0x1337 . ((((0x1337 . ((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((((0x1337 . (0x1337 . ((0x1337 . (((0x1337 . (0x1337 . (((0x1337 . (0x1337 . (0x1337 . (42 . 0x1337)))) . 0x1337) . 0x1337))) . 0x1337) . 0x1337)) . 0x1337))) . 0x1337) . 0x1337) . 0x1337)))) . 0x1337)) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337))) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337)))))) . 0x1337) . 0x1337) . 0x1337) . 0x1337))))) . 0x1337) . 0x1337) . 0x1337))) . 0x1337))) . 0x1337) . 0x1337)))) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337)) . 0x1337)) . 0x1337))))) . 0x1337) . 0x1337)) . 0x1337) . 0x1337)) . 0x1337)))) . 0x1337) . 0x1337)) . 0x1337))) . 0x1337)))))) . 0x1337)) . 0x1337) . 0x1337))) . 0x1337)))) . 0x1337))'):
        RunOut('42', cost: 541, showKeywords: false),
    // path-4
    RunIn('1', solution: '(((0x1337 . (0x1337 . (42 . 0x1337))) . 0x1337) . 0x1337)'):
        RunOut('(((4919 4919 42 . 4919) . 4919) . 4919)', cost: 53, showKeywords: false),
    // path-5
    RunIn(
        '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001',
        solution:
            '(((0x1337 . (0x1337 . (42 . 0x1337))) . 0x1337) . 0x1337)'): RunOut(
        '(((4919 4919 42 . 4919) . 4919) . 4919)',
        cost: 545,
        showKeywords: false),
    // path-6
    RunIn('56800',
            solution:
                '((((((0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . 42) . 0x1337)))) . 0x1337))))) . 0x1337) . 0x1337) . 0x1337) . 0x1337) . 0x1337)'):
        RunOut('42', cost: 117, showKeywords: false),
    // path-7
    RunIn('4012287723',
            solution:
                '(0x1337 . (0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (((0x1337 . (((0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . 42)) . 0x1337))))) . 0x1337) . 0x1337)) . 0x1337) . 0x1337))) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337))) . 0x1337)))) . 0x1337)) . 0x1337)))'):
        RunOut('42', cost: 181, showKeywords: false),
    // path-8
    RunIn('0x0000C8C141AB3121E776',
            solution:
                '((0x1337 . (0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (0x1337 . (((0x1337 . (0x1337 . (0x1337 . (0x1337 . (((((0x1337 . (((0x1337 . ((((0x1337 . (0x1337 . (((0x1337 . (0x1337 . ((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . ((((((0x1337 . ((0x1337 . ((((((0x1337 . (0x1337 . ((((0x1337 . (((0x1337 . 42) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337))) . 0x1337) . 0x1337) . 0x1337) . 0x1337) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337) . 0x1337))) . 0x1337)) . 0x1337)) . 0x1337))) . 0x1337) . 0x1337))) . 0x1337) . 0x1337) . 0x1337)) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337))))) . 0x1337) . 0x1337)))) . 0x1337)))) . 0x1337))) . 0x1337)'):
        RunOut('42', cost: 313, showKeywords: false),
    // path-9
    RunIn('0x00D7',
            solution:
                '(0x1337 . (0x1337 . (0x1337 . ((0x1337 . ((0x1337 . 42) . 0x1337)) . 0x1337))))'):
        RunOut('42', cost: 85, showKeywords: false),
    // point-add-1
    RunIn('(point_add (pubkey_for_exp (q . 1)) (pubkey_for_exp (q . 2)))'): RunOut(
        '0x89ece308f9d1f0131765212deca99697b112d61f9be9a5f1f3780a51335b3ff981747a0b2ca2179b96d2c0c9024e5224',
        cost: 5442082),
    // point-add-2
    RunIn('(= (point_add (pubkey_for_exp (q . 2)) (pubkey_for_exp (q . 3))) (pubkey_for_exp (q . 5)))'):
        RunOut('1', cost: 6768565),
    // point-add-3
    RunIn('(= (point_add (pubkey_for_exp (q . -2)) (pubkey_for_exp (q . 5))) (pubkey_for_exp (q . 3)))'):
        RunOut('1', cost: 6768565),
    // power-1
    RunIn(
        '(a (q . (a 2 (c 2 (c 5 (c 11 (q . ())))))) (c (q . (a (i (= 11 (q . ())) (q . (q . 1)) (q . (* 5 (a 2 (c 2 (c 5 (c (- 11 (q . 1)) (q . ())))))))) 1)) 1))',
        solution:
            '(5033 1000)'): RunOut(
        '0x024d4f505f1f813ca5e0ae8805bad8707347e65c5f7595da4852be5074288431d1df11a0c326d249f1f52ee051579403d1d0c23a7a1e9af18b7d7dc4c63c73542863c434ae9dfa80141a30cf4acee0d6c896aa2e64ea748404427a3bdaa1b97e4e09b8f5e4f8e9c568a4fc219532dbbad5ec54476d19b7408f8e7e7df16b830c20a1e83d90cc0620b0677b7606307f725539ef223561cdb276baf8e92156ee6492d97159c8f64768349ea7e219fd07fa818a59d81d0563b140396402f0ff758840da19808440e0a57c94c48ef84b4ab7ca8c5f010b69b8f443b12b50bd91bdcf2a96208ddac283fa294d6a99f369d57ab41d03eab5bb4809223c141ad94378516e6766a5054e22e997e260978af68a86893890d612f081b40d54fd1e940af35c0d7900c9a917e2458a61ef8a83f7211f519b2c5f015dfa7c2949ef8bedd02d3bad64ca9b2963dc2bb79f24092331133a7a299872079b9d0422b8fc0eeba4e12c7667ac7282cc6ff98a7c670614c9fce5a061b8d5cd4dd3c6d62d245688b62f9713dc2604bdd5bbc85c070c51f784a9ebac0e0eaa2e29e82d93e570887aa7e1a9d25baf0b2c55a4615f35ec0dbe9baa921569700f95e10cd2d4f6ba152a2ac288c37b60980df33dadfa920fd43dbbf55a0b333b88a3237d954e33d80ed6582019faf51db5f1b52e392559323f8bdd945e7fc6cb8f97f2b8417cfc184d7bfbfa5314d4114f95b725847523f1848d13c28ad96662298ee4e2d87af23e7cb4e58d7a20a5c57ae6833b4a37dcafccca0245a0d6ef28f83200d74db390281e03dd3a8b782970895764c3fcef31c5ed6d0b6e4e796a62ad5654691eea0d9db351cc4fee63248405b24c98bd5e68e4a5e0ab11e90e3c7de270c594d3a35639d931853b7010c8c896f6b28b2af719e53da65da89d44b926b6f06123c9217a43be35d751516bd02c18c4f868a2eae78ae3c6deab1115086c8ce58414db4561865d17ab95c7b3d4e1bfc6d0a4d3fbf5f20a0a7d77a9270e4da354c588da55b0063aec76654019ffb310e1503d99a7bc81ccdf5f8b15c8638156038624cf35988d8420bfdb59184c4b86bf5448df65c44aedc2e98eead7f1ba4be8f402baf12d41076b8f0991cfc778e04ba2c05d1440c70488ffaeefde537064035037f729b683e8ff1b3d0b4aa26a2b30bcaa9379f7fcc7072ff9a2c3e801c5979b0ab3e7acf89373de642d596f26514b9fa213ca217181a8429ad69d14445a822b16818c2509480576dc0ff7bac48c557e6d1883039f4daf873fa4f9a4d849130e2e4336049cfaf9e69a7664f0202b901cf07c7065c4dc93c46f98c5ea5c9c9d911b733093490da3bf1c95f43cd18b7be3798535a55ac6da3442946a268b74bde1349ca9807c41d90c7ec218a17efd2c21d5fcd720501f8a488f1dfba0a423dfdb2a877707b77930e80d734ceabcdb24513fad8f2e2470604d041df083bf184edd0e9720dd2b608b1ee1df951d7ce8ec671317b4f5a3946aa75280658b4ef77b3f504ce73e7ecac84eec3c2b45fb62f6fbd5ab78c744abd3bf5d0ab37d7b19124d2470d53db09ddc1f9dd9654b0e6a3a44c95d0a5a5e061bd24813508d3d1c901544dc3e6b84ca38dd2fde5ea60a57cbc12428848c4e3f6fd4941ebd23d709a717a090dd01830436659f7c20fd2d70c916427e9f3f12ac479128c2783f02a9824aa4e31de133c2704e049a50160f656e28aa0a2615b32bd48bb5d5d13d363a487324c1e9b8703be938bc545654465c9282ad5420978263b3e3ba1bb45e1a382554ac68e5a154b896c9c4c2c3853fbbfc877c4fb7dc164cc420f835c413839481b1d2913a68d206e711fb19b284a7bb2bd2033531647cf135833a0f3026b0c1dc0c184120d30ef4865985fdacdfb848ab963d2ae26a784b7b6a64fdb8feacf94febed72dcd0a41dc12be26ed79af88f1d9cba36ed1f95f2da8e6194800469091d2dfc7b04cfe93ab7a7a888b2695bca45a76a1458d08c3b6176ab89e7edc56c7e01142adfff944641b89cd5703a911145ac4ec42164d90b6fcd78b39602398edcd1f935485894fb8a1f416e031624806f02fbd07f398dbfdd48b86dfacf2045f85ecfe5bb1f01fae758dcdb4ae3b1e2aac6f0878f700d1f430b8ca47c9d8254059bd5c006042c4605f33ca98b41',
        cost: 15025126),
    // pubkey-for-exp-1
    RunIn('(pubkey_for_exp (q . 1))'): RunOut(
        '0x97f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb',
        cost: 1326278),
    // pubkey-for-exp-2
    RunIn('(pubkey_for_exp (q . 2))'): RunOut(
        '0xa572cbea904d67468808c8eb50a9450c9721db309128012543902d0ac358a62ae28f75bb8f1c7c42c39a8c5529bf0f4e',
        cost: 1326278),
    // pubkey-for-exp-3
    RunIn('(pubkey_for_exp (q . 3))'): RunOut(
        '0x89ece308f9d1f0131765212deca99697b112d61f9be9a5f1f3780a51335b3ff981747a0b2ca2179b96d2c0c9024e5224',
        cost: 1326278),
    // pubkey-for-exp-4
    RunIn('(pubkey_for_exp (q . -2))'): RunOut(
        '0x8572cbea904d67468808c8eb50a9450c9721db309128012543902d0ac358a62ae28f75bb8f1c7c42c39a8c5529bf0f4e',
        cost: 1326278),
    // pubkey-for-exp-5
    RunIn('(pubkey_for_exp (q . 5))'): RunOut(
        '0xb0e7791fb972fe014159aa33a98622da3cdc98ff707965e536d8636b5fcc5ac7a91a8c46e59a00dca575af0f18fb13dc',
        cost: 1326278),
    // quote-1
    RunIn('(q . 0)'): RunOut('()', cost: 29),
    // quote-2
    RunIn('(q . 0 1)'): null,
    // quote-3
    RunIn('(q . 0)'): RunOut('()', cost: 29),
    // quote-4
    RunIn('(q . (0 1 (f (a)) (q . 15 20)))'): null,
    // quote-5
    RunIn('(q)'): RunOut('()', cost: 29),
    // quote-6
    RunIn('(q . 0 1)'): null,
    // quote-7
    RunIn('(q 0 1)'): RunOut('(() 1)', cost: 29),
    // quote-8
    RunIn('(q . )'): null,
    // quote-explicit-list
    RunIn('(q . ("A" "B"))'): RunOut('(65 66)'),
    // quote-implicit-list
    RunIn('(q "A" "B")'): RunOut('(65 66)'),
    // raise-1
    RunIn('(x (q . 2000))'): null,
    // raise-2
    RunIn('(x (q . 2000))'): null,
    // raise-3
    RunIn('(x (q . (100)) (q . (200)) (q . (300)))'): null,
    // rest-1
    RunIn('(r (q . (100)))'): RunOut('()', cost: 60),
    // rest-2
    RunIn('(r (q . (100 200 300)))'): RunOut('(200 300)', cost: 60),
    // rest-3
    RunIn('(r (q . ()))'): null,
    // rest-4
    RunIn('(r (r (q . ((100 200 300) 400 500))))'): RunOut('(500)', cost: 91),
    // sha256-1
    RunIn('(sha256 (f 1))', solution: '("hello.there.my.dear.friend")'):
        RunOut('0x5272821c151fdd49f19cc58cf8833da5781c7478a36d500e8dc2364be39f8216', cost: 678),
    // sha256-2
    RunIn('(sha256 (q . "hel") (q . "lo.there.my.dear.friend"))'):
        RunOut('0x5272821c151fdd49f19cc58cf8833da5781c7478a36d500e8dc2364be39f8216', cost: 777),
    // sha256-3
    RunIn('(sha256 (f 1) (f (r 1)))', solution: '("hel" "lo.there.my.dear.friend")'):
        RunOut('0x5272821c151fdd49f19cc58cf8833da5781c7478a36d500e8dc2364be39f8216', cost: 918),
    // sha256-4
    RunIn('(sha256 1)', solution: '(hello)'): null,
    // simple_add
    RunIn("(+ (q . 10) (q . 20))"): RunOut('30', cost: 805),
    // softfork-1
    RunIn('(softfork (q . 50))'): RunOut('()', cost: 80),
    // softfork-2
    RunIn('(softfork (q . 51) (q . (+ 60 50)))'): RunOut('()', cost: 101),
    // softfork-3
    RunIn('(softfork (q . 3121) (q . (+ 60 50)))'): RunOut('()', cost: 3171),
    // softfork-4
    RunIn('(softfork (q . 0) (q . (+ 60 50)))'): null,
    // softfork-5
    RunIn('(softfork (q . 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000050))'):
        RunOut('()', cost: 110),
    // strlen-1
    RunIn('(strlen 1)', solution: 'foo-bar'): RunOut('7', cost: 244),
    // strlen-2
    RunIn('(strlen 1)', solution: '(foo-bar)'): null,
    // strlen-3
    RunIn('(strlen 1)', solution: '()'): RunOut('()', cost: 227),
    // strlen-4
    RunIn('(strlen 1)', solution: '"the quick brown fox jumps over the lazy dogs"'):
        RunOut('44', cost: 281),
    // sub-1
    RunIn('(- (q . 7) (q . 1))'): RunOut('6', cost: 805),
    // sub-2
    RunIn('(- (q . 1))'): RunOut('1', cost: 462),
    // sub-3
    RunIn('(- ())'): RunOut('()', cost: 473),
    // sub-4
    RunIn('(-)'): RunOut('()', cost: 109),
    // sub-5
    RunIn('(- (q . 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007) (q . 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001))'):
        RunOut('6', cost: 1144),
    // substr-00
    RunIn('(substr (q . "abcdefghijkl") (q . 14))'): null,
    // substr-01
    RunIn('(substr (q . "abcdefghijkl") (q . 0))'): RunOut('"abcdefghijkl"', cost: 51),
    // substr-02
    RunIn('(substr (q . "abcdefghijkl") (q . -1))'): null,
    // substr-03
    RunIn('(substr (q . "abcdefghijkl") (q . 12))'): RunOut('()', cost: 51),
    // substr-04
    RunIn('(substr (q . "abcdefghijkl") (q . 11))'): RunOut('108', cost: 51),
    // substr-05
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(0 4)'): RunOut('"abcd"', cost: 131),
    // substr-06
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(0 12)'):
        RunOut('"abcdefghijkl"', cost: 131),
    // substr-07
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(-1 12)'): null,
    // substr-08
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(0 13)'): null,
    // substr-09
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(10 10)'): RunOut('()', cost: 131),
    // substr-10
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(10 9)'): null,
    // substr-11
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(1 4)'): RunOut('"bcd"', cost: 131),
    // substr-12
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(8 12)'): RunOut('"ijkl"', cost: 131),
    // substr-13
    RunIn('(substr (q . ("abcdefghijkl")) 2 5)', solution: '(0 4)'): null,
    // substr-14
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '((0) 4)'): null,
    // substr-15
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(0 (4))'): null,
    // substr-16
    RunIn('(substr (q . "abcdefghijkl") (q . 0x000000000000000000000000000000000000000000000000000000000000000002) (q . 0x0000000000000000000000000000000000000000000000000000000000000005))'):
        null,
    // substr-17
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(0 -1)'): null,
    // substr-18
    RunIn('(substr (q . "abcdefghijkl") 2 5)', solution: '(4294967297 3)'): null,
    // trace-1
    RunIn('(+ (q . 10) (f 1))', solution: '(51)'): RunOut('61', cost: 860),
    // trace-2
    RunIn('(x)'): null,
    // unknown-0
    RunIn('(a (q 0x00ffffffffffffffffffff00) (q ()))'): null,
    // unknown-1
    RunIn('(a (q 0xfffffffff) (q ()))'): null,
    // unknown-2
    RunIn('(a (q 0xff) (q 1))', strict: true): null,
    // add-01
    RunIn('(+)'): RunOut('()'),
    // add-02
    RunIn('(+ (q . 1))'): RunOut('1'),
    // add-03
    RunIn('(+ (q . 1) (q . 1))'): RunOut('2'),
    // add-04
    RunIn('(+ () ())'): RunOut('()'),
    // add-05
    RunIn('(+ (q . (1 2)) (q . (1 2)))'): null,
    // add-06
    RunIn('(+ (q . 0xffff) (q . 0xffff))'): RunOut('-2'),
    // add-07
    RunIn('(+ (q . 128) (q . 128))'): RunOut('256'),
    // add-08
    RunIn('(+ (q . -1) (q . -1))'): RunOut('-2'),
    // all-01
    RunIn('(all)'): RunOut('1'),
    // all-02
    RunIn('(all (q . 1))'): RunOut('1'),
    // all-03
    RunIn('(all (q . 1) (q . 1))'): RunOut('1'),
    // all-04
    RunIn('(all () ())'): RunOut('()'),
    // all-05
    RunIn('(all (q . (1 2)) (q . (1 2)))'): RunOut('1'),
    // all-06
    RunIn('(all (q . 0xffff) (q . 0xffff))'): RunOut('1'),
    // all-07
    RunIn('(all (q . 128) (q . 128))'): RunOut('1'),
    // all-08
    RunIn('(all (q . -1) (q . -1))'): RunOut('1'),
    // any-01
    RunIn('(any)'): RunOut('()'),
    // any-02
    RunIn('(any (q . 1))'): RunOut('1'),
    // any-03
    RunIn('(any (q . 1) (q . 1))'): RunOut('1'),
    // any-04
    RunIn('(any () ())'): RunOut('()'),
    // any-05
    RunIn('(any (q . (1 2)) (q . (1 2)))'): RunOut('1'),
    // any-06
    RunIn('(any (q . 0xffff) (q . 0xffff))'): RunOut('1'),
    // any-07
    RunIn('(any (q . 128) (q . 128))'): RunOut('1'),
    // any-08
    RunIn('(any (q . -1) (q . -1))'): RunOut('1'),
    // apply-01
    RunIn('(a)'): null,
    // apply-02
    RunIn('(a (q . 1))'): null,
    // apply-03
    RunIn('(a (q . 1) (q . 1))', strict: true): RunOut('1'),
    // apply-04
    RunIn('(a (q . 1) (q . 1) (q . 1))'): null,
    // apply-05
    RunIn('(a (q . 1) (q . 1) (q . 1) (q . 1))'): null,
    // apply-06
    RunIn('(a () () ())'): null,
    // apply-07
    RunIn('(a (q . (1 2)) (q . (1 2)) (q . (1 2)))'): null,
    // apply-08
    RunIn('(a (q . 0xffff) (q . 0xffff) (q . 0xffff))'): null,
    // apply-09
    RunIn('(a (q . 128) (q . 128) (q . 128))'): null,
    // apply-10
    RunIn('(a (q . -1) (q . -1) (q . -1))'): null,
    // ash-01
    RunIn('(ash)'): null,
    // ash-02
    RunIn('(ash (q . 1))'): null,
    // ash-03
    RunIn('(ash (q . 1) (q . 1))'): RunOut('2'),
    // ash-04
    RunIn('(ash () ())'): RunOut('()'),
    // ash-05
    RunIn('(ash (q . (1 2)) (q . (1 2)))'): null,
    // ash-06
    RunIn('(ash (q . 0xffff) (q . 0xffff))'): RunOut('-1'),
    // ash-07
    RunIn('(ash (q . 128) (q . 128))'): RunOut('0x008000000000000000000000000000000000'),
    // ash-08
    RunIn('(ash (q . -1) (q . -1))'): RunOut('-1'),
    // concat-01
    RunIn('(concat)'): RunOut('()'),
    // concat-02
    RunIn('(concat (q . 1))'): RunOut('1'),
    // concat-03
    RunIn('(concat (q . 1) (q . 1))'): RunOut('257'),
    // concat-04
    RunIn('(concat () ())'): RunOut('()'),
    // concat-05
    RunIn('(concat (q . (1 2)) (q . (1 2)))'): null,
    // concat-06
    RunIn('(concat (q . 0xffff) (q . 0xffff))'): RunOut('0xffffffff'),
    // concat-07
    RunIn('(concat (q . 128) (q . 128))'): RunOut('0x00800080'),
    // concat-08
    RunIn('(concat (q . -1) (q . -1))'): RunOut('0xffff'),
    // concat-09
    RunIn('(concat () (q . -1))'): RunOut('-1'),
    // concat-10
    RunIn('(concat (q . 1) ())'): RunOut('1'),
    // concat-11
    RunIn('(concat (q . (1 2)) (q . 1))'): null,
    // concat-12
    RunIn('(concat (q . 1) (q . (1 2)))'): null,
    // cons-01
    RunIn('(c)'): null,
    // cons-02
    RunIn('(c (q . 1))'): null,
    // cons-03
    RunIn('(c (q . 1) (q . 1))'): RunOut('(1 . 1)', showKeywords: false),
    // cons-04
    RunIn('(c (q . 1) (q . 1) (q . 1))'): null,
    // cons-05
    RunIn('(c () ())'): RunOut('(())'),
    // cons-06
    RunIn('(c (q . (1 2)) (q . (1 2)))'): RunOut('((1 2) 1 2)', showKeywords: false),
    // cons-07
    RunIn('(c (q . 0xffff) (q . 0xffff))'): RunOut('(0xffff . 0xffff)'),
    // cons-08
    RunIn('(c (q . 128) (q . 128))'): RunOut('(128 . 128)'),
    // cons-09
    RunIn('(c (q . -1) (q . -1))'): RunOut('(-1 . -1)'),
    // div-01
    RunIn('(/)'): null,
    // div-02
    RunIn('(/ (q . 1))'): null,
    // div-03
    RunIn('(/ (q . 1) (q . 1))'): RunOut('1'),
    // div-04
    RunIn('(/ (q . 1) (q . 1) (q . 1))'): null,
    // div-05
    RunIn('(/ () ())'): null,
    // div-06
    RunIn('(/ (q . (1 2)) (q . (1 2)))'): null,
    // div-07
    RunIn('(/ (q . 0xffff) (q . 0xffff))'): RunOut('1'),
    // div-08
    RunIn('(/ (q . 128) (q . 128))'): RunOut('1'),
    // div-09
    RunIn('(/ (q . -1) (q . -1))'): RunOut('1'),
    // divmod-01
    RunIn('(divmod)'): null,
    // divmod-02
    RunIn('(divmod (q . 1))'): null,
    // divmod-03
    RunIn('(divmod (q . 1) (q . 1))'): RunOut('(1)', showKeywords: false),
    // divmod-04
    RunIn('(divmod (q . 1) (q . 1) (q . 1))'): null,
    // divmod-05
    RunIn('(divmod () ())'): null,
    // divmod-06
    RunIn('(divmod (q . (1 2)) (q . (1 2)))'): null,
    // divmod-07
    RunIn('(divmod (q . 0xffff) (q . 0xffff))'): RunOut('(1)', showKeywords: false),
    // divmod-08
    RunIn('(divmod (q . 128) (q . 128))'): RunOut('(1)', showKeywords: false),
    // divmod-09
    RunIn('(divmod (q . -1) (q . -1))'): RunOut('(1)', showKeywords: false),
    // eq-01
    RunIn('(=)'): null,
    // eq-02
    RunIn('(= (q . 1))'): null,
    // eq-03
    RunIn('(= (q . 1) (q . 1))'): RunOut('1'),
    // eq-04
    RunIn('(= (q . 1) (q . 1) (q . 1))'): null,
    // eq-05
    RunIn('(= () ())'): RunOut('1'),
    // eq-06
    RunIn('(= (q . (1 2)) (q . (1 2)))'): null,
    // eq-07
    RunIn('(= (q . 0xffff) (q . 0xffff))'): RunOut('1'),
    // eq-08
    RunIn('(= (q . 128) (q . 128))'): RunOut('1'),
    // eq-09
    RunIn('(= (q . -1) (q . -1))'): RunOut('1'),
    // first-01
    RunIn('(f)'): null,
    // first-02
    RunIn('(f (q . 1))'): null,
    // first-03
    RunIn('(f (q . 1) (q . 1))'): null,
    // first-04
    RunIn('(f ())'): null,
    // first-05
    RunIn('(f (q . (1 2)))'): RunOut('1'),
    // first-06
    RunIn('(f (q . 0xffff))'): null,
    // first-07
    RunIn('(f (q . 128))'): null,
    // first-08
    RunIn('(f (q . -1))'): null,
    // gr-01
    RunIn('(>)'): null,
    // gr-02
    RunIn('(> (q . 1))'): null,
    // gr-03
    RunIn('(> (q . 1) (q . 1))'): RunOut('()'),
    // gr-04
    RunIn('(> (q . 1) (q . 1) (q . 1))'): null,
    // gr-05
    RunIn('(> () ())'): RunOut('()'),
    // gr-06
    RunIn('(> (q . (1 2)) (q . (1 2)))'): null,
    // gr-07
    RunIn('(> (q . 0xffff) (q . 0xffff))'): RunOut('()'),
    // gr-08
    RunIn('(> (q . 128) (q . 128))'): RunOut('()'),
    // gr-09
    RunIn('(> (q . -1) (q . -1))'): RunOut('()'),
    // grss-01
    RunIn('(>s)'): null,
    // grss-02
    RunIn('(>s (q . 1))'): null,
    // grss-03
    RunIn('(>s (q . 1) (q . 1))'): RunOut('()'),
    // grss-04
    RunIn('(>s (q . 1) (q . 1) (q . 1))'): null,
    // grss-05
    RunIn('(>s () ())'): RunOut('()'),
    // grss-06
    RunIn('(>s (q . (1 2)) (q . (1 2)))'): null,
    // grss-07
    RunIn('(>s (q . 0xffff) (q . 0xffff))'): RunOut('()'),
    // grss-08
    RunIn('(>s (q . 128) (q . 128))'): RunOut('()'),
    // grss-09
    RunIn('(>s (q . -1) (q . -1))'): RunOut('()'),
    // if-01
    RunIn('(i)'): null,
    // if-02
    RunIn('(i (q . 1))'): null,
    // if-03
    RunIn('(i (q . 1) (q . 1))'): null,
    // if-04
    RunIn('(i (q . 1) (q . 1) (q . 1))'): RunOut('1'),
    // if-05
    RunIn('(i (q . 1) (q . 1) (q . 1) (q . 1))'): null,
    // if-06
    RunIn('(i () () ())'): RunOut('()'),
    // if-07
    RunIn('(i (q . (1 2)) (q . (1 3)) (q . (1 4)))'): RunOut('(1 3)', showKeywords: false),
    // if-08
    RunIn('(i (q . 0xffff) (q . 0xffff) (q . 0xffff))'): RunOut('0xffff'),
    // if-09
    RunIn('(i (q . 128) (q . 128) (q . 128))'): RunOut('128'),
    // if-10
    RunIn('(i (q . -1) (q . -1) (q . -1))'): RunOut('-1'),
    // list-01
    RunIn('(l)'): null,
    // list-02
    RunIn('(l (q . 1))'): RunOut('()'),
    // list-03
    RunIn('(l (q . 1) (q . 1))'): null,
    // list-04
    RunIn('(l ())'): RunOut('()'),
    // list-05
    RunIn('(l (q . (1 2)))'): RunOut('1'),
    // list-06
    RunIn('(l (q . 0xffff))'): RunOut('()'),
    // list-07
    RunIn('(l (q . 128))'): RunOut('()'),
    // list-08
    RunIn('(l (q . -1))'): RunOut('()'),
    // logand-01
    RunIn('(logand)'): RunOut('-1'),
    // logand-02
    RunIn('(logand (q . 1))'): RunOut('1'),
    // logand-03
    RunIn('(logand (q . 1) (q . 1))'): RunOut('1'),
    // logand-04
    RunIn('(logand () ())'): RunOut('()'),
    // logand-05
    RunIn('(logand (q . (1 2)) (q . (1 2)))'): null,
    // logand-06
    RunIn('(logand (q . 0xffff) (q . 0xffff))'): RunOut('-1'),
    // logand-07
    RunIn('(logand (q . 128) (q . 128))'): RunOut('128'),
    // logand-08
    RunIn('(logand (q . -1) (q . -1))'): RunOut('-1'),
    // logior-01
    RunIn('(logior)'): RunOut('()'),
    // logior-02
    RunIn('(logior (q . 1))'): RunOut('1'),
    // logior-03
    RunIn('(logior (q . 1) (q . 1))'): RunOut('1'),
    // logior-04
    RunIn('(logior () ())'): RunOut('()'),
    // logior-05
    RunIn('(logior (q . (1 2)) (q . (1 2)))'): null,
    // logior-06
    RunIn('(logior (q . 0xffff) (q . 0xffff))'): RunOut('-1'),
    // logior-07
    RunIn('(logior (q . 128) (q . 128))'): RunOut('128'),
    // logior-08
    RunIn('(logior (q . -1) (q . -1))'): RunOut('-1'),
    // lognot-01
    RunIn('(lognot)'): null,
    // lognot-02
    RunIn('(lognot (q . 1))'): RunOut('-2'),
    // lognot-03
    RunIn('(lognot (q . 1) (q . 1))'): null,
    // lognot-04
    RunIn('(lognot ())'): RunOut('-1'),
    // lognot-05
    RunIn('(lognot (q . (1 2)))'): null,
    // lognot-06
    RunIn('(lognot (q . 0xffff))'): RunOut('()'),
    // lognot-07
    RunIn('(lognot (q . 128))'): RunOut('-129'),
    // lognot-08
    RunIn('(lognot (q . -1))'): RunOut('()'),
    // logxor-01
    RunIn('(logxor)'): RunOut('()'),
    // logxor-02
    RunIn('(logxor (q . 1))'): RunOut('1'),
    // logxor-03
    RunIn('(logxor (q . 1) (q . 1))'): RunOut('()'),
    // logxor-04
    RunIn('(logxor () ())'): RunOut('()'),
    // logxor-05
    RunIn('(logxor (q . (1 2)) (q . (1 2)))'): null,
    // logxor-06
    RunIn('(logxor (q . 0xffff) (q . 0xffff))'): RunOut('()'),
    // logxor-07
    RunIn('(logxor (q . 128) (q . 128))'): RunOut('()'),
    // logxor-08
    RunIn('(logxor (q . -1) (q . -1))'): RunOut('()'),
    // lsh-01
    RunIn('(lsh)'): null,
    // lsh-02
    RunIn('(lsh (q . 1))'): null,
    // lsh-03
    RunIn('(lsh (q . 1) (q . 1))'): RunOut('2'),
    // lsh-04
    RunIn('(lsh () ())'): RunOut('()'),
    // lsh-05
    RunIn('(lsh (q . (1 2)) (q . (1 2)))'): null,
    // lsh-06
    RunIn('(lsh (q . 0xffff) (q . 0xffff))'): RunOut('32767'),
    // lsh-07
    RunIn('(lsh (q . 128) (q . 128))'): RunOut('0x008000000000000000000000000000000000'),
    // lsh-08
    RunIn('(lsh (q . -1) (q . -1))'): RunOut('127'),
    // mul-01
    RunIn('(*)'): RunOut('1'),
    // mul-02
    RunIn('(* (q . 1))'): RunOut('1'),
    // mul-03
    RunIn('(* (q . 1) (q . 1))'): RunOut('1'),
    // mul-04
    RunIn('(* () ())'): RunOut('()'),
    // mul-05
    RunIn('(* (q . (1 2)) (q . (1 2)))'): null,
    // mul-06
    RunIn('(* (q . 0xffff) (q . 0xffff))'): RunOut('1'),
    // mul-07
    RunIn('(* (q . 128) (q . 128))'): RunOut('16384'),
    // mul-08
    RunIn('(* (q . -1) (q . -1))'): RunOut('1'),
    // not-01
    RunIn('(not)'): null,
    // not-02
    RunIn('(not (q . 1))'): RunOut('()'),
    // not-03
    RunIn('(not (q . 1) (q . 1))'): null,
    // not-04
    RunIn('(not ())'): RunOut('1'),
    // not-05
    RunIn('(not (q . (1 2)))'): RunOut('()'),
    // not-06
    RunIn('(not (q . 0xffff))'): RunOut('()'),
    // not-07
    RunIn('(not (q . 128))'): RunOut('()'),
    // not-08
    RunIn('(not (q . -1))'): RunOut('()'),
    // point_add-01
    RunIn('(point_add)'): RunOut(
        '0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'),
    // point_add-02
    RunIn('(point_add (q . 1))'): null,
    // point_add-03
    RunIn('(point_add (q . 1) (q . 1))'): null,
    // point_add-04
    RunIn('(point_add () ())'): null,
    // point_add-05
    RunIn('(point_add (q . (1 2)) (q . (1 2)))'): null,
    // point_add-06
    RunIn('(point_add (q . 0xffff) (q . 0xffff))'): null,
    // point_add-07
    RunIn('(point_add (q . 128) (q . 128))'): null,
    // point_add-08
    RunIn('(point_add (q . -1) (q . -1))'): null,
    // pubkey_for_exp-01
    RunIn('(pubkey_for_exp)'): null,
    // pubkey_for_exp-02
    RunIn('(pubkey_for_exp (q . 1))'): RunOut(
        '0x97f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb'),
    // pubkey_for_exp-03
    RunIn('(pubkey_for_exp (q . 1) (q . 1))'): null,
    // pubkey_for_exp-04
    RunIn('(pubkey_for_exp ())'): RunOut(
        '0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'),
    // pubkey_for_exp-05
    RunIn('(pubkey_for_exp (q . (1 2)))'): null,
    // pubkey_for_exp-06
    RunIn('(pubkey_for_exp (q . 0xffff))'): RunOut(
        '0xb7f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb'),
    // pubkey_for_exp-07
    RunIn('(pubkey_for_exp (q . 128))'): RunOut(
        '0x8b737f47d5b2794819b5dc01236895e684f1406f8b9f0d9aa06b5fb36dba6c185efec755b77d9424d09b848468127559'),
    // pubkey_for_exp-08
    RunIn('(pubkey_for_exp (q . -1))'): RunOut(
        '0xb7f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb'),
    // quote-01
    RunIn('(q)'): RunOut('()'),
    // quote-02
    RunIn('(q . (q . 1))'): RunOut('(q . 1)'),
    // quote-03
    RunIn('(q . (q . 1) (q . 1))'): null,
    // quote-04
    RunIn('(q . ())'): RunOut('()'),
    // quote-05
    RunIn('(q . (q . (1 2)))'): RunOut('(q 1 2)'),
    // quote-06
    RunIn('(q . (q . 0xffff))'): RunOut('(1 . 0xffff)', showKeywords: false),
    // quote-07
    RunIn('(q . (q . 128))'): RunOut('(1 . 128)', showKeywords: false),
    // quote-08
    RunIn('(q . (q . -1))'): RunOut('(1 . -1)', showKeywords: false),
    // raise-01
    RunIn('(x)'): null,
    // raise-02
    RunIn('(x (q . 1))'): null,
    // raise-03
    RunIn('(x (q . 1) (q . 1))'): null,
    // raise-04
    RunIn('(x () ())'): null,
    // raise-05
    RunIn('(x (q . (1 2)) (q . (1 2)))'): null,
    // raise-06
    RunIn('(x (q . 0xffff) (q . 0xffff))'): null,
    // raise-07
    RunIn('(x (q . 128) (q . 128))'): null,
    // raise-08
    RunIn('(x (q . -1) (q . -1))'): null,
    // rest-01
    RunIn('(r)'): null,
    // rest-02
    RunIn('(r (q . 1))'): null,
    // rest-03
    RunIn('(r (q . 1) (q . 1))'): null,
    // rest-04
    RunIn('(r ())'): null,
    // rest-05
    RunIn('(r (q . (1 2)))'): RunOut('(2)', showKeywords: false),
    // rest-06
    RunIn('(r (q . 0xffff))'): null,
    // rest-07
    RunIn('(r (q . 128))'): null,
    // rest-08
    RunIn('(r (q . -1))'): null,
    // sha256-01
    RunIn('(sha256)'): RunOut('0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'),
    // sha256-02
    RunIn('(sha256 (q . 1))'):
        RunOut('0x4bf5122f344554c53bde2ebb8cd2b7e3d1600ad631c385a5d7cce23c7785459a'),
    // sha256-03
    RunIn('(sha256 (q . 1) (q . 1))'):
        RunOut('0x9dcf97a184f32623d11a73124ceb99a5709b083721e878a16d78f596718ba7b2'),
    // sha256-04
    RunIn('(sha256 () ())'):
        RunOut('0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'),
    // sha256-05
    RunIn('(sha256 (q . (1 2)) (q . (1 2)))'): null,
    // sha256-06
    RunIn('(sha256 (q . 0xffff) (q . 0xffff))'):
        RunOut('0xad95131bc0b799c0b1af477fb14fcf26a6a9f76079e48bf090acb7e8367bfd0e'),
    // sha256-07
    RunIn('(sha256 (q . 128) (q . 128))'):
        RunOut('0xda60b92bc70e999c07a6ded180a16c1e801e89a5722b565ea242d6aff2f507d8'),
    // sha256-08
    RunIn('(sha256 (q . -1) (q . -1))'):
        RunOut('0xca2fd00fa001190744c15c317643ab092e7048ce086a243e2be9437c898de1bb'),
    // softfork-01
    RunIn('(softfork)'): null,
    // softfork-02
    RunIn('(softfork (q . 1))'): RunOut('()', cost: 31),
    // softfork-03
    RunIn('(softfork (q . 1) (q . 1))'): RunOut('()', cost: 51),
    // softfork-04
    RunIn('(softfork ())'): null,
    // softfork-05
    RunIn('(softfork (q . (1 2)))'): null,
    // softfork-06
    RunIn('(softfork (q . 0xffff))'): null,
    // softfork-07
    RunIn('(softfork (q . 128))'): RunOut('()', cost: 158),
    // softfork-08
    RunIn('(softfork (q . -1))'): null,
    // strlen-01
    RunIn('(strlen)'): null,
    // strlen-02
    RunIn('(strlen (q . 1))'): RunOut('1'),
    // strlen-03
    RunIn('(strlen (q . 1) (q . 1))'): null,
    // strlen-04
    RunIn('(strlen ())'): RunOut('()'),
    // strlen-05
    RunIn('(strlen (q . (1 2)))'): null,
    // strlen-06
    RunIn('(strlen (q . 0xffff))'): RunOut('2'),
    // strlen-07
    RunIn('(strlen (q . 128))'): RunOut('2'),
    // strlen-08
    RunIn('(strlen (q . -1))'): RunOut('1'),
    // sub-01
    RunIn('(-)'): RunOut('()'),
    // sub-02
    RunIn('(- (q . 1))'): RunOut('1'),
    // sub-03
    RunIn('(- (q . 1) (q . 1))'): RunOut('()'),
    // sub-04
    RunIn('(- () ())'): RunOut('()'),
    // sub-05
    RunIn('(- (q . (1 2)) (q . (1 2)))'): null,
    // sub-06
    RunIn('(- (q . 0xffff) (q . 0xffff))'): RunOut('()'),
    // sub-07
    RunIn('(- (q . 128) (q . 128))'): RunOut('()'),
    // sub-08
    RunIn('(- (q . -1) (q . -1))'): RunOut('()'),
    // substr-01
    RunIn('(substr)'): null,
    // substr-02
    RunIn('(substr (q . 1))'): null,
    // substr-03
    RunIn('(substr (q . 1) (q . 1))'): RunOut('()', showKeywords: false),
    // substr-04
    RunIn('(substr (q . 1) (q . 1) (q . 1))'): RunOut('()'),
    // substr-05
    RunIn('(substr (q . 1) (q . 1) (q . 1) (q . 1))'): null,
    // substr-06
    RunIn('(substr () () ())'): RunOut('()'),
    // substr-07
    RunIn('(substr (q . (1 2)) (q . (1 2)) (q . (1 2)))'): null,
    // substr-08
    RunIn('(substr (q . 0xffff) (q . 0xffff) (q . 0xffff))'): null,
    // substr-09
    RunIn('(substr (q . 128) (q . 128) (q . 128))'): null,
    // substr-10
    RunIn('(substr (q . -1) (q . -1) (q . -1))'): null,
    // unknown-00
    RunIn('(0x000 )', strict: true): null,
    // unknown-01
    RunIn('(0x000 )'): RunOut('()', cost: 11),
    // unknown-02
    RunIn('(0x03f )', strict: true): null,
    // unknown-03
    RunIn('(0x03f )'): RunOut('()', cost: 11),
    // unknown-04
    RunIn('(0x100 )', strict: true): null,
    // unknown-05
    RunIn('(0x100 )'): RunOut('()', cost: 12),
    // unknown-06
    RunIn('(0x13f )', strict: true): null,
    // unknown-07
    RunIn('(0x13f )'): RunOut('()', cost: 12),
    // unknown-08
    RunIn('(0xfffeffff00 )', strict: true): null,
    // unknown-09
    RunIn('(0xfffeffff00 )'): RunOut('()', cost: 4294901770),
    // unknown-10
    RunIn('(0xfffeffff3f )', strict: true): null,
    // unknown-100
    RunIn('(0x180 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-101
    RunIn('(0x180 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 3854),
    // unknown-102
    RunIn('(0x1bf (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-103
    RunIn('(0x1bf (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 3854),
    // unknown-104
    RunIn('(0xfffeffff80 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-105
    RunIn('(0xfffeffff80 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-106
    RunIn('(0xfffeffffbf (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-107
    RunIn('(0xfffeffffbf (q . 1) (q . 2) (q . 3))'): null,
    // unknown-108
    RunIn('(0x7ffffffff80 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-109
    RunIn('(0x7ffffffff80 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-11
    RunIn('(0xfffeffff3f )'): RunOut('()', cost: 4294901770),
    // unknown-110
    RunIn('(0x7ffffffffbf (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-111
    RunIn('(0x7ffffffffbf (q . 1) (q . 2) (q . 3))'): null,
    // unknown-112
    RunIn('(0x0c0 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-113
    RunIn('(0x0c0 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 626),
    // unknown-114
    RunIn('(0x0ff (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-115
    RunIn('(0x0ff (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 626),
    // unknown-116
    RunIn('(0x1c0 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-117
    RunIn('(0x1c0 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 1182),
    // unknown-118
    RunIn('(0x1ff (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-119
    RunIn('(0x1ff (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 1182),
    // unknown-12
    RunIn('(0x7ffffffff00 )', strict: true): null,
    // unknown-120
    RunIn('(0xfffeffffc0 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-121
    RunIn('(0xfffeffffc0 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-122
    RunIn('(0xfffeffffff (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-123
    RunIn('(0xfffeffffff (q . 1) (q . 2) (q . 3))'): null,
    // unknown-124
    RunIn('(0x7ffffffffc0 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-125
    RunIn('(0x7ffffffffc0 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-126
    RunIn('(0x7ffffffffff (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-127
    RunIn('(0x7ffffffffff (q . 1) (q . 2) (q . 3))'): null,
    // unknown-128
    RunIn(
        '(0x000 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-129
    RunIn('(0x000 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 51),
    // unknown-13
    RunIn('(0x7ffffffff00 )'): null,
    // unknown-130
    RunIn(
        '(0x03f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-131
    RunIn('(0x03f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 51),
    // unknown-132
    RunIn(
        '(0x100 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-133
    RunIn('(0x100 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 52),
    // unknown-134
    RunIn(
        '(0x13f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-135
    RunIn('(0x13f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 52),
    // unknown-136
    RunIn(
        '(0xfffeffff00 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-137
    RunIn('(0xfffeffff00 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 4294901810),
    // unknown-138
    RunIn(
        '(0xfffeffff3f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-139
    RunIn('(0xfffeffff3f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 4294901810),
    // unknown-14
    RunIn('(0x7ffffffff3f )', strict: true): null,
    // unknown-140
    RunIn(
        '(0x7ffffffff00 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-141
    RunIn('(0x7ffffffff00 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-142
    RunIn(
        '(0x7ffffffff3f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-143
    RunIn('(0x7ffffffff3f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-144
    RunIn(
        '(0x040 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-145
    RunIn('(0x040 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 1065),
    // unknown-146
    RunIn(
        '(0x07f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-147
    RunIn('(0x07f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 1065),
    // unknown-148
    RunIn(
        '(0x140 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-149
    RunIn('(0x140 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 2080),
    // unknown-15
    RunIn('(0x7ffffffff3f )'): null,
    // unknown-150
    RunIn(
        '(0x17f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-151
    RunIn('(0x17f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 2080),
    // unknown-152
    RunIn(
        '(0xfffeffff40 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-153
    RunIn('(0xfffeffff40 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-154
    RunIn(
        '(0xfffeffff7f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-155
    RunIn('(0xfffeffff7f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-156
    RunIn(
        '(0x7ffffffff40 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-157
    RunIn('(0x7ffffffff40 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-158
    RunIn(
        '(0x7ffffffff7f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-159
    RunIn('(0x7ffffffff7f (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-16
    RunIn('(0x040 )', strict: true): null,
    // unknown-160
    RunIn(
        '(0x080 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-161
    RunIn('(0x080 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 1582),
    // unknown-162
    RunIn(
        '(0x0bf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-163
    RunIn('(0x0bf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 1582),
    // unknown-164
    RunIn(
        '(0x180 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-165
    RunIn('(0x180 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 3114),
    // unknown-166
    RunIn(
        '(0x1bf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-167
    RunIn('(0x1bf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 3114),
    // unknown-168
    RunIn(
        '(0xfffeffff80 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-169
    RunIn('(0xfffeffff80 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-17
    RunIn('(0x040 )'): RunOut('()', cost: 109),
    // unknown-170
    RunIn(
        '(0xfffeffffbf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-171
    RunIn('(0xfffeffffbf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-172
    RunIn(
        '(0x7ffffffff80 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-173
    RunIn('(0x7ffffffff80 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-174
    RunIn(
        '(0x7ffffffffbf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-175
    RunIn('(0x7ffffffffbf (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-176
    RunIn(
        '(0x0c0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-177
    RunIn('(0x0c0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 738),
    // unknown-178
    RunIn(
        '(0x0ff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-179
    RunIn('(0x0ff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 738),
    // unknown-18
    RunIn('(0x07f )', strict: true): null,
    // unknown-180
    RunIn(
        '(0x1c0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-181
    RunIn('(0x1c0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 1426),
    // unknown-182
    RunIn(
        '(0x1ff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-183
    RunIn('(0x1ff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        RunOut('()', cost: 1426),
    // unknown-184
    RunIn(
        '(0xfffeffffc0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-185
    RunIn('(0xfffeffffc0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-186
    RunIn(
        '(0xfffeffffff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-187
    RunIn('(0xfffeffffff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-188
    RunIn(
        '(0x7ffffffffc0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-189
    RunIn('(0x7ffffffffc0 (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-19
    RunIn('(0x07f )'): RunOut('()', cost: 109),
    // unknown-190
    RunIn(
        '(0x7ffffffffff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))',
        strict: true): null,
    // unknown-191
    RunIn('(0x7ffffffffff (q . 0x101010101010101010101010101010101010101010101010101010101010101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101) (q . 0x101010101))'):
        null,
    // unknown-192
    RunIn('(0x000 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-193
    RunIn('(0x000 (q . 1) (q . 2) (q . (1 10 20)))'): RunOut('()', cost: 71),
    // unknown-194
    RunIn('(0x03f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-195
    RunIn('(0x03f (q . 1) (q . 2) (q . (1 10 20)))'): RunOut('()', cost: 71),
    // unknown-196
    RunIn('(0x100 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-197
    RunIn('(0x100 (q . 1) (q . 2) (q . (1 10 20)))'): RunOut('()', cost: 72),
    // unknown-198
    RunIn('(0x13f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-199
    RunIn('(0x13f (q . 1) (q . 2) (q . (1 10 20)))'): RunOut('()', cost: 72),
    // unknown-20
    RunIn('(0x140 )', strict: true): null,
    // unknown-200
    RunIn('(0xfffeffff00 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-201
    RunIn('(0xfffeffff00 (q . 1) (q . 2) (q . (1 10 20)))'): RunOut('()', cost: 4294901830),
    // unknown-202
    RunIn('(0xfffeffff3f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-203
    RunIn('(0xfffeffff3f (q . 1) (q . 2) (q . (1 10 20)))'): RunOut('()', cost: 4294901830),
    // unknown-204
    RunIn('(0x7ffffffff00 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-205
    RunIn('(0x7ffffffff00 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-206
    RunIn('(0x7ffffffff3f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-207
    RunIn('(0x7ffffffff3f (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-208
    RunIn('(0x040 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-209
    RunIn('(0x040 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-21
    RunIn('(0x140 )'): RunOut('()', cost: 208),
    // unknown-210
    RunIn('(0x07f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-211
    RunIn('(0x07f (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-212
    RunIn('(0x140 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-213
    RunIn('(0x140 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-214
    RunIn('(0x17f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-215
    RunIn('(0x17f (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-216
    RunIn('(0xfffeffff40 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-217
    RunIn('(0xfffeffff40 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-218
    RunIn('(0xfffeffff7f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-219
    RunIn('(0xfffeffff7f (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-22
    RunIn('(0x17f )', strict: true): null,
    // unknown-220
    RunIn('(0x7ffffffff40 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-221
    RunIn('(0x7ffffffff40 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-222
    RunIn('(0x7ffffffff7f (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-223
    RunIn('(0x7ffffffff7f (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-224
    RunIn('(0x080 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-225
    RunIn('(0x080 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-226
    RunIn('(0x0bf (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-227
    RunIn('(0x0bf (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-228
    RunIn('(0x180 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-229
    RunIn('(0x180 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-23
    RunIn('(0x17f )'): RunOut('()', cost: 208),
    // unknown-230
    RunIn('(0x1bf (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-231
    RunIn('(0x1bf (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-232
    RunIn('(0xfffeffff80 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-233
    RunIn('(0xfffeffff80 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-234
    RunIn('(0xfffeffffbf (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-235
    RunIn('(0xfffeffffbf (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-236
    RunIn('(0x7ffffffff80 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-237
    RunIn('(0x7ffffffff80 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-238
    RunIn('(0x7ffffffffbf (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-239
    RunIn('(0x7ffffffffbf (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-24
    RunIn('(0xfffeffff40 )', strict: true): null,
    // unknown-240
    RunIn('(0x0c0 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-241
    RunIn('(0x0c0 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-242
    RunIn('(0x0ff (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-243
    RunIn('(0x0ff (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-244
    RunIn('(0x1c0 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-245
    RunIn('(0x1c0 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-246
    RunIn('(0x1ff (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-247
    RunIn('(0x1ff (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-248
    RunIn('(0xfffeffffc0 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-249
    RunIn('(0xfffeffffc0 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-25
    RunIn('(0xfffeffff40 )'): null,
    // unknown-250
    RunIn('(0xfffeffffff (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-251
    RunIn('(0xfffeffffff (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-252
    RunIn('(0x7ffffffffc0 (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-253
    RunIn('(0x7ffffffffc0 (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-254
    RunIn('(0x7ffffffffff (q . 1) (q . 2) (q . (1 10 20)))', strict: true): null,
    // unknown-255
    RunIn('(0x7ffffffffff (q . 1) (q . 2) (q . (1 10 20)))'): null,
    // unknown-26
    RunIn('(0xfffeffff7f )', strict: true): null,
    // unknown-27
    RunIn('(0xfffeffff7f )'): null,
    // unknown-28
    RunIn('(0x7ffffffff40 )', strict: true): null,
    // unknown-29
    RunIn('(0x7ffffffff40 )'): null,
    // unknown-30
    RunIn('(0x7ffffffff7f )', strict: true): null,
    // unknown-31
    RunIn('(0x7ffffffff7f )'): null,
    // unknown-32
    RunIn('(0x080 )', strict: true): null,
    // unknown-33
    RunIn('(0x080 )'): RunOut('()', cost: 102),
    // unknown-34
    RunIn('(0x0bf )', strict: true): null,
    // unknown-35
    RunIn('(0x0bf )'): RunOut('()', cost: 102),
    // unknown-36
    RunIn('(0x180 )', strict: true): null,
    // unknown-37
    RunIn('(0x180 )'): RunOut('()', cost: 194),
    // unknown-38
    RunIn('(0x1bf )', strict: true): null,
    // unknown-39
    RunIn('(0x1bf )'): RunOut('()', cost: 194),
    // unknown-40
    RunIn('(0xfffeffff80 )', strict: true): null,
    // unknown-41
    RunIn('(0xfffeffff80 )'): null,
    // unknown-42
    RunIn('(0xfffeffffbf )', strict: true): null,
    // unknown-43
    RunIn('(0xfffeffffbf )'): null,
    // unknown-44
    RunIn('(0x7ffffffff80 )', strict: true): null,
    // unknown-45
    RunIn('(0x7ffffffff80 )'): null,
    // unknown-46
    RunIn('(0x7ffffffffbf )', strict: true): null,
    // unknown-47
    RunIn('(0x7ffffffffbf )'): null,
    // unknown-48
    RunIn('(0x0c0 )', strict: true): null,
    // unknown-49
    RunIn('(0x0c0 )'): RunOut('()', cost: 152),
    // unknown-50
    RunIn('(0x0ff )', strict: true): null,
    // unknown-51
    RunIn('(0x0ff )'): RunOut('()', cost: 152),
    // unknown-52
    RunIn('(0x1c0 )', strict: true): null,
    // unknown-53
    RunIn('(0x1c0 )'): RunOut('()', cost: 294),
    // unknown-54
    RunIn('(0x1ff )', strict: true): null,
    // unknown-55
    RunIn('(0x1ff )'): RunOut('()', cost: 294),
    // unknown-56
    RunIn('(0xfffeffffc0 )', strict: true): null,
    // unknown-57
    RunIn('(0xfffeffffc0 )'): null,
    // unknown-58
    RunIn('(0xfffeffffff )', strict: true): null,
    // unknown-59
    RunIn('(0xfffeffffff )'): null,
    // unknown-60
    RunIn('(0x7ffffffffc0 )', strict: true): null,
    // unknown-61
    RunIn('(0x7ffffffffc0 )'): null,
    // unknown-62
    RunIn('(0x7ffffffffff )', strict: true): null,
    // unknown-63
    RunIn('(0x7ffffffffff )'): null,
    // unknown-64
    RunIn('(0x000 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-65
    RunIn('(0x000 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 71),
    // unknown-66
    RunIn('(0x03f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-67
    RunIn('(0x03f (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 71),
    // unknown-68
    RunIn('(0x100 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-69
    RunIn('(0x100 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 72),
    // unknown-70
    RunIn('(0x13f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-71
    RunIn('(0x13f (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 72),
    // unknown-72
    RunIn('(0xfffeffff00 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-73
    RunIn('(0xfffeffff00 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 4294901830),
    // unknown-74
    RunIn('(0xfffeffff3f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-75
    RunIn('(0xfffeffff3f (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 4294901830),
    // unknown-76
    RunIn('(0x7ffffffff00 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-77
    RunIn('(0x7ffffffff00 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-78
    RunIn('(0x7ffffffff3f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-79
    RunIn('(0x7ffffffff3f (q . 1) (q . 2) (q . 3))'): null,
    // unknown-80
    RunIn('(0x040 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-81
    RunIn('(0x040 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 1138),
    // unknown-82
    RunIn('(0x07f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-83
    RunIn('(0x07f (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 1138),
    // unknown-84
    RunIn('(0x140 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-85
    RunIn('(0x140 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 2206),
    // unknown-86
    RunIn('(0x17f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-87
    RunIn('(0x17f (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 2206),
    // unknown-88
    RunIn('(0xfffeffff40 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-89
    RunIn('(0xfffeffff40 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-90
    RunIn('(0xfffeffff7f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-91
    RunIn('(0xfffeffff7f (q . 1) (q . 2) (q . 3))'): null,
    // unknown-92
    RunIn('(0x7ffffffff40 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-93
    RunIn('(0x7ffffffff40 (q . 1) (q . 2) (q . 3))'): null,
    // unknown-94
    RunIn('(0x7ffffffff7f (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-95
    RunIn('(0x7ffffffff7f (q . 1) (q . 2) (q . 3))'): null,
    // unknown-96
    RunIn('(0x080 (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-97
    RunIn('(0x080 (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 1962),
    // unknown-98
    RunIn('(0x0bf (q . 1) (q . 2) (q . 3))', strict: true): null,
    // unknown-99
    RunIn('(0x0bf (q . 1) (q . 2) (q . 3))'): RunOut('()', cost: 1962),
  };

  Map<SerializeIn, SerializeOut?> serializeTests = {
    SerializeIn('()'): SerializeOut('80'),
    SerializeIn('(q . 1)'): SerializeOut('ff0101'),
    SerializeIn('(q . (q . ()))'): SerializeOut('ff01ff0180'),
    SerializeIn('1'): SerializeOut('01'),
    SerializeIn('0xffffabcdef'): SerializeOut('85ffffabcdef'),
    SerializeIn('"abcdef"'): SerializeOut('86616263646566'),
    SerializeIn('(f (c (q . 20) (q . 30)))'): SerializeOut('ff05ffff04ffff0114ffff011e8080'),
    SerializeIn(
            '(+ 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 100000000000000000000000000000000000))'):
        SerializeOut(
            'ff10ffbd200888489af9569930925255368b25e27749a2c3a5d54a31d90d45629b2e29348d5be73f72bf489e71df64000000000000000000000000000000000000ff8f13426172c74d822b878fe80000000080'),
    SerializeIn(
            '4738294723897492387408293747389479823749238749832748932748923745987326478623874623784679283747823649832756782374732864823764872364873264832764738264873648273648723648273649273687'):
        SerializeOut(
            'c04a4ad5c0c0203e6553d723e4e9c6861ec58934a33f237330d166d7e5b490595f999c5ae6a01836e022ecbe7b489f0584841ef8c7bb88ec9b6c63d8d9d4459c142a42632ae01a6022f08b57'),
    SerializeIn('((((()))))'): SerializeOut('ffffffff8080808080'),
  };

  group('Run', () {
    for (var item in runTests.entries) {
      var puzzle = item.key.puzzle;
      var solution = item.key.solution;
      test('$puzzle with $solution', () {
        var cost = item.key.cost == null ? null : BigInt.from(item.key.cost!);
        if (item.value == null) {
          expect(() {
            var puzzleProgram = Program.parse(puzzle);
            var solutionProgram = Program.parse(solution);
            puzzleProgram.run(solutionProgram,
                options: RunOptions(maxCost: cost, strict: item.key.strict));
          }, throwsA(isA<dynamic>()));
        } else {
          var puzzleProgram = Program.parse(puzzle);
          var solutionProgram = Program.parse(solution);
          var result = puzzleProgram.run(solutionProgram,
              options: RunOptions(maxCost: cost, strict: item.key.strict));
          var expected = item.value!;
          var output = item.value!.dump
              ? HexEncoder().convert(result.program.serialize())
              : result.program.toSource(showKeywords: item.value!.showKeywords);
          expect(output, equals(expected.output), reason: 'Wrong output');
          if (expected.cost != null) {
            expect(result.cost.toInt(), equals(expected.cost! - 9), reason: 'Wrong cost');
          }
        }
      });
    }
  });

  group('Serialize', () {
    for (var item in serializeTests.entries) {
      var puzzle = item.key.puzzle;
      test(puzzle, () {
        if (item.value == null) {
          expect(() {
            var puzzleProgram = Program.parse(puzzle);
            puzzleProgram.serialize();
          }, throwsA(isA<dynamic>()));
        } else {
          var puzzleProgram = Program.parse(puzzle);
          var expected = item.value!;
          expect(puzzleProgram.serializeHex(), equals(expected.output), reason: 'Wrong output');
        }
      });
    }
  });
}
